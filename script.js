// ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏®‡∏¥‡∏•‡∏õ‡∏≤‡∏Å‡∏£ ‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ
const southWest = L.latLng(13.1025, 99.9415);
const northEast = L.latLng(13.1100, 99.9520);
const universityBounds = L.latLngBounds(southWest, northEast);

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
const map = L.map("map", {
  maxBounds: universityBounds,
  maxBoundsViscosity: 1.0,
  minZoom: 16,
  maxZoom: 18,
}).setView([13.1056, 99.9474], 16);

// ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á OpenStreetMap
L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
  attribution: "¬© OpenStreetMap contributors",
}).addTo(map);

let routingControl = null;
let userLocation = null;

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° marker ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
function addMarker(lat, lng) {
  if (!universityBounds.contains([lat, lng])) return;
  const marker = L.marker([lat, lng]).addTo(map);
  marker.bindPopup(`<strong>‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢</strong><br/><button onclick="navigateTo(${lat}, ${lng})">‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</button>`);
}

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° marker
map.on("click", e => addMarker(e.latlng.lat, e.latlng.lng));

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function getLocation() {
  if (!navigator.geolocation) {
    alert("‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
    return;
  }

  navigator.geolocation.getCurrentPosition(
    position => {
      const lat = position.coords.latitude;
      const lng = position.coords.longitude;
      if (!universityBounds.contains([lat, lng])) {
        alert("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢!");
        return;
      }
      userLocation = [lat, lng];
      L.marker(userLocation, { title: "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô" })
        .addTo(map)
        .bindPopup("üìç ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
        .openPopup();
      map.setView(userLocation, 17);
    },
    error => alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ: " + error.message),
    {
      enableHighAccuracy: true,
      timeout: 10000,
      maximumAge: 0
    }
  );
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á marker
function navigateTo(lat, lng) {
  if (!userLocation) {
    alert("‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‚Äú‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‚Äù ‡∏Å‡πà‡∏≠‡∏ô");
    return;
  }
  if (routingControl) map.removeControl(routingControl);

  routingControl = L.Routing.control({
    waypoints: [
      L.latLng(userLocation[0], userLocation[1]),
      L.latLng(lat, lng)
    ],
    routeWhileDragging: false,
    showAlternatives: false,
    lineOptions: { styles: [{ color: 'blue', opacity: 0.7, weight: 5 }] },
    router: L.Routing.osrmv1({ serviceUrl: 'https://router.project-osrm.org/route/v1' }),
    createMarker: function() { return null; }
  }).addTo(map);
}
